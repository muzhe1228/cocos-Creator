<template>
  <div class="get_group_award">
    <div class="userInfo">
      <img :src="userPic" alt="">
      <p>{{userNick}}</p>
    </div>
    <div class="award_number">
      +<span>{{userAwardsName}}</span>
    </div>
    <p class="notice">恭喜您组团成功，奖励可在考拉APP中查看</p>
    <div class="member_award_list">
      <div class="member_award" v-for="(item, index) in memberList">
        <div class="member">
          <p class="captain" v-show="item.memberType == 0">团长</p>
          <img :src="item.pic" alt="" :onerror="errorImg">
          <p class="nick">{{item.nick}}</p>
        </div>
        <div class="number">
          <span>{{item.receiveState==0?'未领取':item.awardsName}}</span>
        </div>
      </div>
      <!--  <div class="member_award">
          <div class="member">
            <p class="captain">团长</p>
            <img src="/static/images/billboard/coinla.png" alt="">
            <p class="nick">kevin</p>
          </div>
          <div class="number">
            <span>55</span><em>CLB</em>
          </div>
        </div>
        <div class="member_award">
          <div class="member">
            <img src="/static/images/billboard/coinla.png" alt="">
            <p class="nick">kevin</p>
          </div>
          <div class="number">
            <span>55</span><em>CLB</em>
          </div>
        </div>
        <div class="member_award">
          <div class="member">
            <img src="/static/images/billboard/coinla.png" alt="">
            <p class="nick">kevin</p>
          </div>
          <div class="number">
            <span>55</span><em>CLB</em>
          </div>
        </div>
        <div class="member_award">
          <div class="member">
            <img src="/static/images/billboard/coinla.png" alt="">
            <p class="nick">kevin</p>
          </div>
          <div class="number">
            <span>55</span><em>CLB</em>
          </div>
        </div>-->
    </div>
    <div class="see_award_list_text" @click="groupAward">
      查看奖励记录
      <img src="/static/images/group/symbol.png" alt="">
    </div>
    <div class="btn">
      <p class="group_btn" @click="selectGroupNum">我要组团</p>
      <p class="download_btn" @click="download()">下载考拉行情APP</p>
    </div>
    <!--绑定app弹框-->
    <div class="shadow_wrap" v-show="showAccountToast" @click="hideFunc('showAccountToast')">
      <div class="bind_app_toast" @click="">
        <h3>绑定卡拉行情账号</h3>
        <div class="userMessage">
          <div class="account">
            <span class="account_text"><em>账</em><em>号 :</em></span>
            <input type="text" placeholder="输入手机号或邮箱" v-model="bindData.account" @change="changeInfo('account')">
          </div>
          <div class="captcha">
            <span class="captcha_text">验证码 :</span>
            <input type="text" placeholder="输入验证码" v-model="bindData.captcha" @change="changeInfo('captcha')">
            <button @click="getcaptcha" :disabled = 'isDisabled'>{{captchaText}}</button>
          </div>
        </div>
        <p class="notice_text">发起组团拆红包需绑定考拉行情APP账号</p>
        <div class="btn">
          <p class="cancle_btn" @click="showAccountToast = false">取消</p>
          <p class="bind_btn" @click="bindAccount">立即绑定</p>
        </div>
      </div>
    </div>
    <!--引导app下载-->
    <p class="yd" v-show="downloadAppLead" @click="downloadAppLead = false">
      <img src="/static/images/download/yd.png" alt="">
    </p>
  </div>
</template>

<script>
  import {validates, validateHandles} from 'assets/js/reg'
  import {shareWeixin, isIos, openInApp} from 'assets/js/case'
  import {getCoinlaSingle} from 'assets/js/httpAll'
  export default {
    name: 'getGroupAward',
    metaInfo:{
      title: '获取奖励'
    },
    data () {
      return {
        awardsName: this.$route.params.awardsName,
        downloadAppLead: false, //下载app引导
        codeData: '',
        wxGroupData: '',
        memberList: [],
        errorImg: "this.onerror=null;this.src='/static/images/billboard/coinla.png'", //默认图片
        userPic: '',
        userNick: '',
        userAwardsName: '',
        isDisabled: false, //绑定app账号，禁用
        bindData: {
          account: '',
          captcha: '',
          client: 0,
          recommendCode: this.$route.query.inviteCode
        },
        captchaText: '获取验证码',
        showAccountToast: false //绑定app账号弹框
      }
    },
    mounted () {
      this.selectGroup()
    },
    methods: {
      //获取验证码
      getcaptcha () {
        alert(this.bindData.account)
        let validateData = validateHandles.phoneEmail(this.bindData.account)
        if(!validateData){

          getCoinlaSingle('/captcha/sms', {account: this.bindData.account, type: 1}).then((res) => {
            alert('验证码')
            if(res.data.code == 0){
              this.$toast({message: '验证码已发送', duration: 1500})
              let timer = null
              let _this = this
              let num = 60
              _this.captchaText = num + 'S'
              _this.isDisabled = true
              timer = setInterval(() => {
                num = num - 1
                _this.captchaText = num + 's'
                if(num <= 0){
                  _this.isDisabled = false
                  _this.captchaText = '获取验证码'
                  clearInterval(timer)
                }
              }, 1000)
            }else{
              this.$toast({message: res.data.code< 0 ? '失败': res.message, duration: 1500})
            }
          }).catch((err) => {})
        }else{
          this.$toast({message: validateData, duration: 1500})
        }
      },
      //点击立即绑定, 注册登录
      bindAccount () {
        let validateAccountData = validateHandles.phoneEmail(this.bindData.account)
        let validateCaptchaData = validateHandles.captcha(this.bindData.captcha)
        if(validateAccountData){
          this.$toast({message: validateAccountData, duration: 1500})
        }else if(validateCaptchaData){
          this.$toast({message: validateCaptchaData, duration: 1500})
        }else{
          getCoinlaSingle('/user/login/registerOrLogin', this.bindData).then((res) => {
            let resData = res.data.data
            if(res.data.code == 0){
              this.wxHeadersData = resData //获取token等数据
              this.$toast({message: '绑定成功', duration: 1500})
              this.showAccountToast = false
              //判断是新用户还是老用户（是否微信绑定），新用户显示下载app弹框，老用户显示获取到的奖励弹框
              getCoinlaToken('/user/wechatCheck', {}, this.wxHeadersData).then((res) => {
                //code为0代表已经绑定，也就是老用户，获取后端传过来的uuid
                if(res.data.code == 0){
                  this.wxBind = false
                  this.shadow = false
                  this.downloadShadow = false
                  //请求拆红包接口
                  getCoinlaToken('/groupActivity/updateReceiveState', {
                    activityId: 2,
                    infoId: this.$route.query.infoId || this.$route.params.infoId,
                    uuid: this.wxGroupData.uuid
                  }, this.wxHeadersData).then((res) => {
                    let resData = res.data.data
                    this.awardsNumberToast = true
                    this.shadow = true
                    this.openStatus = false
                    this.awardsNumber = resData.awardsNumber
                    this.awardsType = resData.awardsType
                    this.awardsName = resData.awardsName
                  }).catch((err) => {
                    this.$toast({message: '失败', duration: 1500})
                  })
                }else{
                  //新用户,去绑定微信
                  this.wxBind = true
                  this.shadow = true
                }
              })
            }else{
              this.$toast({message: res.data.code< 0 ? '失败' : res.data.message, duration: 1500})
            }
          }).catch((err) => {})
        }
      },
      //注册登录之后，新用户出现下载考拉详情弹框，老用户不需要
      //验证输入框内容，blur，change
      changeInfo (type) {
        alert('type'+ type)
        let validateAccountData = validateHandles.phoneEmail(this.bindData.account)
        let validateCaptchaData = validateHandles.captcha(this.bindData.captcha)
        if(type == 'account'){
          if(validateAccountData){
            this.$toast({message: validateAccountData, duration: 1500})
          }
        }else{
          if(validateCaptchaData){
            this.$toast({message: validateCaptchaData, duration: 1500})
          }
        }
      },
      hideFunc (val) {
        let el1 = event.currentTarget;
        let el2 = event.target;
        if (el1 == el2) {
          if(val == 'showAccountToast'){
            this.showAccountToast = false
          }else if(val == 'downloadShadow'){
            this.downloadShadow = false
          }
        }
      },
      //跳转到我的奖励列表页面
      groupAward (){
        this.$router.push({name: 'groupAward', params: {
          uuid: this.$route.params.uuid,
          awardsName: this.$route.params.awardsName,
          infoId: this.$route.params.infoId,
          headersToken: this.$route.params.headersToken
        }})
      },
      //下载app
      download () {
        if (isIos()) {
          window.location.href = 'https://itunes.apple.com/cn/app/coinla/id1359706851?mt=8'
        } else {
          let ua = navigator.userAgent.toLowerCase();
          if (ua.match(/MicroMessenger/i) == "micromessenger" || ua.match(/QQ/i)=='qq') {
            this.downloadAppLead = true
          } else {
            window.location.href = 'https://api.coinla.com/download/android'
          }
        }
      },
      //成团数量接口
      selectGroupNum () {
        alert(JSON.stringify(this.$route.params.headersToken))
        if(this.$route.params.headersToken){
            alert('11')
          getCoinlaToken('/groupActivity/selectGroupNumber', {
            activityId: 2,
          }, this.$route.params.headersToken).then((res) => {
            let resData = res.data.data
            alert(resData)
            if(resData < 10){
              this.organizeGroup()
            }else{
              this.$toast({message: '发团次数超过10次不可再发团', duration: 1500})
            }
          }).catch((err) => {
            this.$toast({message: '失败', duration: 1500})
          })
        }else{
          alert('xxx')
          this.showAccountToast = true //未登录账号,绑定app弹框显示
        }
//        getCoinlaToken('/groupActivity/selectGroupNumber', {
//          activityId: 2,
//        }, this.$route.params.headersToken).then((res) => {
//          let resData = res.data.data
//          if(resData < 10){
//              alert('小于10次')
//            this.organizeGroup()
//          }else{
//            this.$toast({message: '发团次数超过10次不可再发团', duration: 1500})
//          }
//        }).catch((err) => {
//          this.$toast({message: '失败', duration: 1500})
//        })
      },
      //我要组团接口
      organizeGroup () {
        alert(JSON.stringify(this.$route.params.uuid))
        getCoinlaToken('/groupActivity/insertGroup', {
          activityId: 2,
          uuid: this.$route.params.uuid,
        }, this.$route.params.headersToken).then((res) => {
          let resData = res.data.data
          this.$router.push({name: 'group', params: {infoId: resData.infoId}})
        }).catch((err) => {
          this.$toast({message: '失败', duration: 1500})
        })
      },
      selectGroup () {
        //如果是微信打开不传token,app打开传token
        alert(this.$route.query.infoId || this.$route.params.infoId)
        let postData = {
          activityId: 2,
          infoId: this.$route.query.infoId || this.$route.params.infoId,
        }
        getCoinlaSingle('/groupActivity/selectGroup', postData).then((res) => {
          let _this = this
          let resData = res.data.data
          if(res.data.code == 0){
            _this.memberList = resData.memberList
            let list = resData.memberList
            for(let i = 0, len = resData.memberList.length; i < len; i++){
              if(list[i].uuid == this.$route.params.uuid){
                this.userNick = list[i].nick
                this.userPic = list[i].pic
                this.userAwardsName = list[i].awardsName
                return false
              }
            }
          }else{
            this.$toast({message: res.data.message, duration: 1500})
          }
        }).catch((err) => {})
      }
    }
  }
</script>

<style scoped lang="stylus">
  .get_group_award{
    min-height: 100vh
    padding: 0 0.32rem 1rem
    background: url(/static/images/group/get_group_award_bac.png) no-repeat
    background-size: 100% 100%
    overflow: hidden
    em{
      font-style: normal
    }
    .userInfo{
      width: 100%
      text-align: center
      img{
        width: 1.4rem
        height: 1.4rem
        border-radius: 50%
        overflow: hidden
        margin: 0.34rem auto 0.18rem
      }
      p{
        color: #fff
        font-size:0.36rem
      }
    }
    .award_number{
      width: 4.2rem
      height: 1.52rem
      margin: 0 auto
      background: url(/static/images/group/award_number_img.png) no-repeat
      background-size: 100% 100%
      line-height: 1.52rem
      text-align: center
      color: #f78353
      font-size: 0.48rem
    }
    .notice{
      color: #fff
      font-size: 0.28rem
      text-align: center
      margin: 0.12rem auto 0.2rem
    }
    .member_award_list{
      border-radius: 0.2rem
      overflow: hidden
      .member_award{
        display: flex
        height: 1.44rem
        line-height: 1.44rem
        padding-left: 0.32rem
        background-color: #e4faff
        .member{
          display: flex
          align-items: center
          position: relative
          width: 50%
          overflow: hidden
          .captain{
            position: absolute
            left: 0.13rem
            top: 0.18rem
            width: 0.62rem
            height: 0.24rem
            line-height: 0.24rem
            text-align: center
            color: #fff
            background-color: #f56d6d
            font-size: 0.18rem
            border-radius: 3px
          }
          .nick{
            margin-left: 0.14rem
            color: #49abc2
            font-size: 0.24rem
          }
          img{
            border-radius: 50%
            border: 1px solid #9fdcea
            width: 0.88rem
            height: 0.88rem
          }
        }
        .number{
          width: 50%
          text-align: center
          color: #f78353
          font-size: 0.36rem
        }
      }
      .member_award:nth-child(even){
        background-color: #effbfd
      }
    }
    .see_award_list_text{
      color: #fff
      font-size: 0.28rem
      text-align: center
      margin: 0.26rem 0 0.32rem
      img{
        width: 0.22rem
        height: 0.2rem
        margin-left: 0.1rem
      }
    }
    .btn{
      display: flex
      justify-content: space-between
      p{
        height: 0.66rem
        width: 2.72rem
        line-height: 0.66rem
        text-align: center
        color: #fff
        font-size: 0.28rem
        background-color: #f56d6d
        border-radius: 0.32rem
      }
    }
    .shadow_wrap {
      position: fixed
      width: 100%
      height: 100%
      z-index: 998
      left: 0
      top: 0
      background: rgba(0, 0, 0, .6)
      .bind_app_toast{
        width: 6.21rem
        padding: 0 0.55rem 0.7rem
        position: absolute
        top: 50%
        left: 50%
        transform: translate(-50%, -50%)
        z-index: 999
        background-color: #fff
        border-radius: 0.2rem
        h3{
          text-align: center
          margin: 0.96rem auto 0.53rem
          color: #2f3133
          font-size: 0.36rem
        }
        .userMessage{
          .account, .captcha{
            display: flex
            align-items: center
            width: 100%
            height: 0.82rem
            padding: 0 0.21rem 0 0.24rem
            color: #605e5e
            font-size: 0.28rem
            margin-bottom: 0.25rem
            background-color: #f8f7f7
            border-radius: 0.2rem
            overflow: hidden
          }
          .account_text, .captcha_text{
            display: block
            text-align: right
            width: 1.05rem
          }
          .account_text{
            display: flex
            em{
              font-style: normal
              display: block
              width: 50%
              text-align: left
              justify-content: space-between
            }
          }
          .captcha{
            button{
              display: block
              width: 1.16rem
            //width: 216rem
              height: 0.4rem
              line-height: 0.4rem
              font-size: 0.20rem
              border: 1px solid #5dd2fd
              border-radius: 0.2rem
              text-align: center
            }
          }
          input, button{
            line-height: normal
            border: none
            background: none
          }
          input{
            padding: 0.1rem 0 0.1rem 0.15rem
            flex: 1
            color: #333
          }
        }
        .notice_text{
          color: #b6b6b6
          font-size: 0.22rem
          text-align: center
          margin: 0.22rem auto 0.74rem

        }
        .btn{
          display: flex
          justify-content: space-between
          p{
            text-align: center
            width: 1.92rem
            height: 0.6rem
            line-height: 0.6rem
            border-radius: 0.2rem
            font-size: 0.3rem
            background-color: #ebebeb
            color: #bab9b9
          }
          .bind_btn{
            background-color: #f64819
            color: #fff
          }
        }
      }
    }
    .yd {
      width: 100%
      height: 100%
      position: fixed
      background-color: rgba(0, 0, 0, .5)
      left: 0
      top: 0
      z-index: 9999
      img {
        position: absolute
        right: 10px
        width: 6.1rem
        top: 0
      }
    }
  }
</style>
